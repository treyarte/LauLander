%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3f6a93b863ca8314695b382c0c8c2b3d, type: 3}
  m_Name: L1220_InputSystemRefactoringGamepad
  m_EditorClassIdentifier: 
  lectureCode: 1220
  lectureSectionNumber: 22
  lectureName: InputSystemRefactoringGamepad
  lectureTitle: Input System Refactoring, Gamepad
  frequentlyAskedQuestionListSO: {fileID: 11400000, guid: c358c5f0db91a0948bffe8f5986c67fb,
    type: 2}
  quizListSO: {fileID: 11400000, guid: f5c012130b93bc34cad2268366b6353f, type: 2}
  exerciseListSO: {fileID: 0}
  lectureDescription: "<h1>Lecture Summary: Input System Refactoring, Gamepad</h1>\r\n\r\nIn
    this lecture, we refactored our input system to use Unity\u2019s new Input System
    with proper input actions, which not only made our code cleaner but also enabled
    gamepad support with basically zero extra effort. Previously, we had hardcoded
    keyboard input checks directly in the `Lander` script. That works fine for a
    prototype, but it doesn't scale well. So, we created a new Input Actions asset,
    set up an action map with Up, Left, and Right actions, and generated a C# class
    for strong-typed access without any magic strings.\r\n\r\nWe then built a `GameInput`
    singleton class to manage input logic and expose simple methods like `IsUpActionPressed()`.
    The `Lander` now uses these instead of checking keys directly. Once we enabled
    the input system via `inputActions.Enable()`, everything worked just like before.\r\n\r\nThen
    came the magic, we added gamepad bindings by simply listening to inputs like
    the A button. No code changes needed. Just press A, and the lander flies. That\u2019s
    the power of Unity\u2019s Input System, clean, scalable, and super flexible.
    And since we\u2019ve got it set up properly now, adding touch input next will
    be a breeze!\r\n"
