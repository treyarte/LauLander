%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3f6a93b863ca8314695b382c0c8c2b3d, type: 3}
  m_Name: L1280_BonusWindZones
  m_EditorClassIdentifier: 
  lectureCode: 1280
  lectureSectionNumber: 28
  lectureName: BonusWindZones
  lectureTitle: 'BONUS: Wind Zones'
  frequentlyAskedQuestionListSO: {fileID: 11400000, guid: e174848e8b058c94da0fb94f8a2b8a66,
    type: 2}
  quizListSO: {fileID: 11400000, guid: c88b501ea5e783b4fa53c1e60ff0c55a, type: 2}
  exerciseListSO: {fileID: 0}
  lectureDescription: "<h1>Lecture Summary: Wind Zones</h1>\n\nIn this lecture, we
    added a fun and simple new mechanic: wind zones! These are areas that apply continuous
    force to the lander, making the gameplay a bit more challenging and dynamic.
    Sure, there\u2019s technically no wind on the moon... but \"wind zones\" sounds
    way cooler than \"force zones\", right?\n\nWe started by importing a wind icon
    sprite, created a visual zone using a tiled square, and added a BoxCollider2D
    set as a trigger. The logic is super simple\u2014if the lander enters the zone,
    we apply force using a new AddForce() method on the lander script. This lets
    us push the player in any direction we want.\n\nThen, to make things clear for
    the player, we added a visual with arrows showing the direction of the wind force.
    We could go wild customizing them based on strength or color, but we kept it
    clean and simple for now.\n\nThis is a great example of how, with clean code
    and a solid foundation, we can add new gameplay mechanics in just a few minutes.
    Now we can use wind zones to build some really fun and tricky level designs!"
