%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L1160_04
  m_EditorClassIdentifier: 
  question: Why is the Singleton pattern useful in this lecture?
  optionList:
  - To make code run faster
  - To allow multiple copies of the lander
  - To give easy global access to the lander instance
  - To reduce build size
  correctOptionIndex: 2
  answer: By using a Singleton, any script (like GameManager) can easily access the
    single Lander instance. Which in this game is perfect since there is only a single
    Lander in the entire game.
