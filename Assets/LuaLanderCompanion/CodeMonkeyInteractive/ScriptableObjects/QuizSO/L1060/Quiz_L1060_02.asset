%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L1060_02
  m_EditorClassIdentifier: 
  question: Why do we define the `Update()` and `Start()` methods as `private` explicitly?
  optionList:
  - To make them visible in the Unity Editor
  - To avoid compiler warnings
  - To improve performance
  - To be explicit and write clean, high-quality code
  correctOptionIndex: 3
  answer: "By writing `private` explicitly, you're being clear and intentional about
    your code's access level. It\u2019s a small detail but very useful as your projects
    grow."
